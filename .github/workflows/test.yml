name: yarn test
on: [push, pull_request]

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:latest

    strategy:
      matrix:
        node-version: [16.x]

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: postgres
          POSTGRES_DB: mydb

        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ matrix.node-version }}

      # - uses: mskelton/setup-yarn@v1.2.1
      #   with:
      #     node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate prisma client
        run: yarn prisma generate

      - name: push db
        run: yarn prisma db push
        env:
          DATABASE_URL: postgresql://postgres:postgres@postgres:5432/mydb?schema=public

      - name: Lint
        run: yarn eslint

      - name: test-scripts
        run: yarn test
        env:
          DATABASE_URL: postgresql://postgres:postgres@postgres:5432/mydb?schema=public

      # - name: Run tests and check code coverage
      #   uses: mattallty/jest-github-action@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
